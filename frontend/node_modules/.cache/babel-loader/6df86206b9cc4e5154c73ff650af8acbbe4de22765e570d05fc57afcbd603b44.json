{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micha\\\\Documents\\\\Portofolio\\\\barber-shop\\\\frontend\\\\src\\\\screens\\\\book\\\\ChooseBarberScreen.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Form, Button, Card, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n// Components\nimport FormContainer from '../../components/common/FormContainer';\nimport BookingSteps from '../../components/booking/BookingSteps';\nimport Loader from '../../components/common/Loader';\nimport Message from '../../components/common/Message';\n// Slices\nimport { useGetBarbersQuery } from '../../slices/usersApiSlice';\n// import { saveShippingAddress } from '../../slices/cartSlice';\nimport { saveBarber } from '../../slices/bookingSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ChooseBarberScreen() {\n  _s();\n  var _error$data;\n  // Api Slice: Get the barbers\n  const {\n    data: barbers,\n    isLoading,\n    error\n  } = useGetBarbersQuery();\n  console.log(barbers);\n  // Get the barber global state\n  // const booking = useSelector((state) => state.booking);\n  // const { barber } = booking;\n\n  // Populate the component local state based on the results of the global state if any\n  // const [address, setAddress] = useState(shippingAddress?.address || '');\n  // const [city, setCity] = useState(shippingAddress?.city || '');\n  // const [postalCode, setPostalCode] = useState(shippingAddress?.postalCode || '');\n  // const [country, setCountry] = useState(shippingAddress?.country || '');\n\n  // const [barberName, setBarberName] = useState(barber?.username || '')\n  const [selectedBarber, setSelectedBarber] = useState(null);\n\n  // const isFormFilled = address && city && postalCode && country;\n\n  // Initialization\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const submitHandler = e => {\n    e.preventDefault();\n    // Update the global state\n    dispatch(saveBarber({\n      selectedBarber\n    }));\n    // navigate('/booking-datetime');\n  };\n  const handleBarberSelect = barberId => {\n    setSelectedBarber(barberId);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: (error === null || error === void 0 ? void 0 : (_error$data = error.data) === null || _error$data === void 0 ? void 0 : _error$data.message) || error.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center py-3 mb-4\",\n          children: \"Select Barber\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(BookingSteps, {\n          step1: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: submitHandler,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"barber\",\n            className: \"row justify-content-md-center\",\n            children: barbers && barbers.map(barber => /*#__PURE__*/_jsxDEV(Col, {\n              sm: 12,\n              md: 6,\n              lg: 4,\n              xl: 3,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                onClick: () => handleBarberSelect(barber.id),\n                className: selectedBarber === barber.id ? 'selected-card my-3 p-3 rounded' : 'my-3 p-3 rounded',\n                children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                  src: barber.image,\n                  variant: \"top\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                    as: \"div\",\n                    className: \"card-title\",\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: barber.username\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 77,\n                      columnNumber: 85\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                    type: \"radio\",\n                    id: `barber-${barber.id}`,\n                    label: \"\",\n                    checked: selectedBarber === barber.id,\n                    onChange: () => handleBarberSelect(barber.id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this)\n            }, barber.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"primary\",\n            className: \"my-2\",\n            width: \"50%\"\n            // disabled={!isFormFilled}\n            ,\n            children: \"Continue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n}\n_s(ChooseBarberScreen, \"fOM7bdB5f96BK/e5hQTnfOJTdbs=\", false, function () {\n  return [useGetBarbersQuery, useNavigate, useDispatch];\n});\n_c = ChooseBarberScreen;\nexport default ChooseBarberScreen;\nvar _c;\n$RefreshReg$(_c, \"ChooseBarberScreen\");","map":{"version":3,"names":["React","useState","Form","Button","Card","Row","Col","useDispatch","useSelector","useNavigate","FormContainer","BookingSteps","Loader","Message","useGetBarbersQuery","saveBarber","jsxDEV","_jsxDEV","Fragment","_Fragment","ChooseBarberScreen","_s","_error$data","data","barbers","isLoading","error","console","log","selectedBarber","setSelectedBarber","navigate","dispatch","submitHandler","e","preventDefault","handleBarberSelect","barberId","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","message","className","step1","onSubmit","Group","controlId","map","barber","sm","md","lg","xl","onClick","id","Img","src","image","Body","Title","as","username","Check","type","label","checked","onChange","width","_c","$RefreshReg$"],"sources":["C:/Users/micha/Documents/Portofolio/barber-shop/frontend/src/screens/book/ChooseBarberScreen.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Form, Button, Card, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\n// Components\r\nimport FormContainer from '../../components/common/FormContainer';\r\nimport BookingSteps from '../../components/booking/BookingSteps';\r\nimport Loader from '../../components/common/Loader';\r\nimport Message from '../../components/common/Message';\r\n// Slices\r\nimport { useGetBarbersQuery } from '../../slices/usersApiSlice';\r\n// import { saveShippingAddress } from '../../slices/cartSlice';\r\nimport { saveBarber } from '../../slices/bookingSlice';\r\n\r\nfunction ChooseBarberScreen() {\r\n    // Api Slice: Get the barbers\r\n    const { data: barbers, isLoading, error} = useGetBarbersQuery();\r\n    console.log(barbers)\r\n    // Get the barber global state\r\n    // const booking = useSelector((state) => state.booking);\r\n    // const { barber } = booking;\r\n\r\n    // Populate the component local state based on the results of the global state if any\r\n    // const [address, setAddress] = useState(shippingAddress?.address || '');\r\n    // const [city, setCity] = useState(shippingAddress?.city || '');\r\n    // const [postalCode, setPostalCode] = useState(shippingAddress?.postalCode || '');\r\n    // const [country, setCountry] = useState(shippingAddress?.country || '');\r\n\r\n    // const [barberName, setBarberName] = useState(barber?.username || '')\r\n    const [selectedBarber, setSelectedBarber] = useState(null);\r\n\r\n    // const isFormFilled = address && city && postalCode && country;\r\n\r\n    // Initialization\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        // Update the global state\r\n        dispatch(saveBarber({selectedBarber}));\r\n        // navigate('/booking-datetime');\r\n    }\r\n\r\n      const handleBarberSelect = (barberId) => {\r\n        setSelectedBarber(barberId);\r\n      };\r\n\r\n  return (\r\n<>\r\n{ isLoading ? (\r\n      <Loader/>\r\n    ) : error ? (\r\n      <Message variant='danger'>{ error?.data?.message || error.error }</Message>\r\n    ) : (\r\n    <>\r\n        <Row>\r\n            <h1 className='text-center py-3 mb-4'>Select Barber</h1>\r\n        </Row>\r\n        <Row>\r\n            <BookingSteps step1 />\r\n        </Row>\r\n        <Row>\r\n            <Form onSubmit={submitHandler}>\r\n                {/* Barber */}\r\n                {/* <div className=\"row\"> */}\r\n                <Form.Group controlId='barber' className='row justify-content-md-center'>\r\n                        {/* className='my-2 d-flex justify-content-center' */}\r\n                        { barbers && barbers.map((barber) => (\r\n                            <Col key={barber.id} sm={12} md={6} lg={4} xl={3}>\r\n                                <Card\r\n                                onClick={() => handleBarberSelect(barber.id)}\r\n                                className={selectedBarber === barber.id ? 'selected-card my-3 p-3 rounded' : 'my-3 p-3 rounded'}\r\n                                >\r\n                                    <Card.Img src={barber.image} variant='top' />\r\n                                    <Card.Body>\r\n                                        <Card.Title as='div' className='card-title'><strong>{barber.username}</strong></Card.Title>\r\n                                        <Form.Check\r\n                                            type=\"radio\"\r\n                                            id={`barber-${barber.id}`}\r\n                                            label=''\r\n                                            checked={selectedBarber === barber.id}\r\n                                            onChange={() => handleBarberSelect(barber.id)}\r\n                                        />\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </Col>\r\n                    ))}\r\n                </Form.Group>\r\n                {/* Submit Button */}\r\n                <Button\r\n                    type='submit'\r\n                    variant='primary'\r\n                    className='my-2'\r\n                    width='50%'\r\n                    // disabled={!isFormFilled}\r\n                >\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </Row>\r\n\r\n    </>\r\n        ) }\r\n</>\r\n  )\r\n}\r\n\r\nexport default ChooseBarberScreen"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}