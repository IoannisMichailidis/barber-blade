{"ast":null,"code":"// Manipulate global frond-end state\n\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = localStorage.getItem('booking') ? JSON.parse(localStorage.getItem('booking')) : {\n  barber: {},\n  dateTime: {},\n  custInfo: {}\n}; // I use localstorage to make sure that the state is kept intact when the user comes back after leaves the website\n\nconst bookingSlice = createSlice({\n  name: 'booking',\n  initialState,\n  reducers: {\n    saveBarber: (state, action) => {\n      state.barber = action.payload;\n      localStorage.setItem('barber', JSON.stringify(action.payload));\n    },\n    saveDateTime: (state, action) => {\n      state.dateTime = action.payload;\n      localStorage.setItem('dateTime', JSON.stringify(action.payload));\n    },\n    saveCustInfo: (state, action) => {\n      state.custInfo = action.payload;\n      localStorage.setItem('custInfo', JSON.stringify(action.payload));\n    },\n    resetBooking: state => initialState\n  }\n});\n\n// Export Actions\nexport const {\n  saveBarber,\n  saveDateTime,\n  saveCustInfo,\n  resetBooking\n} = bookingSlice.actions;\nexport default bookingSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","localStorage","getItem","JSON","parse","barber","dateTime","custInfo","bookingSlice","name","reducers","saveBarber","state","action","payload","setItem","stringify","saveDateTime","saveCustInfo","resetBooking","actions","reducer"],"sources":["C:/Users/micha/Documents/Portofolio/barber-shop/frontend/src/slices/bookingSlice.js"],"sourcesContent":["// Manipulate global frond-end state\r\n\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = localStorage.getItem('booking') ? JSON.parse(localStorage.getItem('booking')) : {barber: {}, dateTime: {}, custInfo: {}};  // I use localstorage to make sure that the state is kept intact when the user comes back after leaves the website\r\n\r\nconst bookingSlice = createSlice({\r\n    name: 'booking',\r\n    initialState,\r\n    reducers: {\r\n        saveBarber: (state, action) => {\r\n            state.barber = action.payload;\r\n            localStorage.setItem('barber', JSON.stringify(action.payload));\r\n        },\r\n        saveDateTime: (state, action) => {\r\n            state.dateTime = action.payload;\r\n            localStorage.setItem('dateTime', JSON.stringify(action.payload));\r\n        },\r\n        saveCustInfo: (state, action) => {\r\n            state.custInfo = action.payload;\r\n            localStorage.setItem('custInfo', JSON.stringify(action.payload));\r\n        },\r\n        resetBooking: (state) => initialState\r\n    }\r\n})\r\n\r\n// Export Actions\r\nexport const {\r\n    saveBarber,\r\n    saveDateTime,\r\n    saveCustInfo,\r\n    resetBooking\r\n} = bookingSlice.actions;\r\n\r\nexport default bookingSlice.reducer;"],"mappings":"AAAA;;AAEA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,GAAG;EAACG,MAAM,EAAE,CAAC,CAAC;EAAEC,QAAQ,EAAE,CAAC,CAAC;EAAEC,QAAQ,EAAE,CAAC;AAAC,CAAC,CAAC,CAAE;;AAEhJ,MAAMC,YAAY,GAAGT,WAAW,CAAC;EAC7BU,IAAI,EAAE,SAAS;EACfT,YAAY;EACZU,QAAQ,EAAE;IACNC,UAAU,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC3BD,KAAK,CAACP,MAAM,GAAGQ,MAAM,CAACC,OAAO;MAC7Bb,YAAY,CAACc,OAAO,CAAC,QAAQ,EAAEZ,IAAI,CAACa,SAAS,CAACH,MAAM,CAACC,OAAO,CAAC,CAAC;IAClE,CAAC;IACDG,YAAY,EAAEA,CAACL,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACN,QAAQ,GAAGO,MAAM,CAACC,OAAO;MAC/Bb,YAAY,CAACc,OAAO,CAAC,UAAU,EAAEZ,IAAI,CAACa,SAAS,CAACH,MAAM,CAACC,OAAO,CAAC,CAAC;IACpE,CAAC;IACDI,YAAY,EAAEA,CAACN,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACL,QAAQ,GAAGM,MAAM,CAACC,OAAO;MAC/Bb,YAAY,CAACc,OAAO,CAAC,UAAU,EAAEZ,IAAI,CAACa,SAAS,CAACH,MAAM,CAACC,OAAO,CAAC,CAAC;IACpE,CAAC;IACDK,YAAY,EAAGP,KAAK,IAAKZ;EAC7B;AACJ,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EACTW,UAAU;EACVM,YAAY;EACZC,YAAY;EACZC;AACJ,CAAC,GAAGX,YAAY,CAACY,OAAO;AAExB,eAAeZ,YAAY,CAACa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}