{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micha\\\\Documents\\\\Portofolio\\\\barber-shop\\\\frontend\\\\src\\\\screens\\\\book\\\\ChooseDateTimeScreen.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Form, Button, Card, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n// Components\nimport FormContainer from '../../components/common/FormContainer';\nimport BookingSteps from '../../components/booking/BookingSteps';\nimport Loader from '../../components/common/Loader';\nimport Message from '../../components/common/Message';\n// Slices\nimport { useGetBarbersQuery } from '../../slices/usersApiSlice';\n// import { saveShippingAddress } from '../../slices/cartSlice';\nimport { saveBarber } from '../../slices/bookingSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ChooseDateTimeScreen() {\n  _s();\n  var _error$data;\n  // Api Slice: Get the barbers\n  const {\n    data: barbers,\n    isLoading,\n    error\n  } = useGetBarbersQuery();\n  const [selectedBarber, setSelectedBarber] = useState(null);\n\n  // Initialization\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const submitHandler = e => {\n    e.preventDefault();\n    const barber = barbers.find(barber => barber.id === selectedBarber);\n    console.log(barber);\n    // Update the global state\n    dispatch(saveBarber({\n      barber\n    }));\n    navigate('/booking-datetime');\n  };\n  const handleBarberSelect = barberId => {\n    setSelectedBarber(barberId);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: (error === null || error === void 0 ? void 0 : (_error$data = error.data) === null || _error$data === void 0 ? void 0 : _error$data.message) || error.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center py-3 mb-4\",\n          children: \"Select Date & Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(BookingSteps, {\n          step1: true,\n          step2: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: formik.handleSubmit,\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formDivs\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"res-date\",\n              children: \"Choose date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              \"data-testid\": \"res-date\",\n              className: formik.errors.date ? \"errorFormInput\" : \"formInput\",\n              type: \"date\",\n              id: \"res-date\",\n              ...formik.getFieldProps(\"date\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 21\n            }, this), formik.errors.date && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"ErrorDiv\",\n              children: formik.errors.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 44\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this), bookingIsPending ? /*#__PURE__*/_jsxDEV(\"input\", {\n            \"aria-label\": \"On Click\",\n            disabled: true,\n            className: \"CustomButton\",\n            type: \"submit\",\n            value: \"loading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            \"aria-label\": \"On Click\",\n            disabled: formik.errors.date || formik.errors.time || formik.errors.guests || formik.errors.occasion,\n            className: \"CustomButton\",\n            type: \"submit\",\n            value: \"Continue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 19\n          }, this), bookingError && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"errorDiv\",\n            children: \"Something went wrong! Booking is not submitted.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n}\n_s(ChooseDateTimeScreen, \"fOM7bdB5f96BK/e5hQTnfOJTdbs=\", false, function () {\n  return [useGetBarbersQuery, useNavigate, useDispatch];\n});\n_c = ChooseDateTimeScreen;\nexport default ChooseDateTimeScreen;\nvar _c;\n$RefreshReg$(_c, \"ChooseDateTimeScreen\");","map":{"version":3,"names":["React","useState","Form","Button","Card","Row","Col","useDispatch","useSelector","useNavigate","FormContainer","BookingSteps","Loader","Message","useGetBarbersQuery","saveBarber","jsxDEV","_jsxDEV","Fragment","_Fragment","ChooseDateTimeScreen","_s","_error$data","data","barbers","isLoading","error","selectedBarber","setSelectedBarber","navigate","dispatch","submitHandler","e","preventDefault","barber","find","id","console","log","handleBarberSelect","barberId","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","message","className","step1","step2","onSubmit","formik","handleSubmit","noValidate","htmlFor","errors","date","type","getFieldProps","bookingIsPending","disabled","value","time","guests","occasion","bookingError","_c","$RefreshReg$"],"sources":["C:/Users/micha/Documents/Portofolio/barber-shop/frontend/src/screens/book/ChooseDateTimeScreen.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Form, Button, Card, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\n// Components\r\nimport FormContainer from '../../components/common/FormContainer';\r\nimport BookingSteps from '../../components/booking/BookingSteps';\r\nimport Loader from '../../components/common/Loader';\r\nimport Message from '../../components/common/Message';\r\n// Slices\r\nimport { useGetBarbersQuery } from '../../slices/usersApiSlice';\r\n// import { saveShippingAddress } from '../../slices/cartSlice';\r\nimport { saveBarber } from '../../slices/bookingSlice';\r\n\r\nfunction ChooseDateTimeScreen() {\r\n    // Api Slice: Get the barbers\r\n    const { data: barbers, isLoading, error} = useGetBarbersQuery();\r\n\r\n    const [selectedBarber, setSelectedBarber] = useState(null);\r\n\r\n    // Initialization\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const barber = barbers.find(barber => barber.id === selectedBarber);\r\n        console.log(barber)\r\n        // Update the global state\r\n        dispatch(saveBarber({barber}));\r\n        navigate('/booking-datetime');\r\n    }\r\n\r\n      const handleBarberSelect = (barberId) => {\r\n        setSelectedBarber(barberId);\r\n      };\r\n\r\n  return (\r\n<>\r\n{ isLoading ? (\r\n      <Loader/>\r\n    ) : error ? (\r\n      <Message variant='danger'>{ error?.data?.message || error.error }</Message>\r\n    ) : (\r\n    <>\r\n        <Row>\r\n            <h1 className='text-center py-3 mb-4'>Select Date & Time</h1>\r\n        </Row>\r\n        <Row>\r\n            <BookingSteps step1 step2/>\r\n        </Row>\r\n        <Row>\r\n        \r\n                {/* Submit Button */}\r\n                {/* <Row className=\"mt-4 justify-content-center\">\r\n                    <Col xs={12} md={6} className=\"d-flex justify-content-center\">\r\n                        <Button\r\n                            type='submit'\r\n                            variant='primary'\r\n                            className='btn-block'\r\n                            disabled={selectedBarber === null}\r\n                        >\r\n                            Continue\r\n                        </Button>\r\n                    </Col>\r\n                </Row> */}\r\n\r\n\r\n            <form onSubmit={formik.handleSubmit} noValidate>\r\n                {/* Date */}\r\n                <div className='formDivs' >\r\n                    <label htmlFor=\"res-date\">Choose date</label>\r\n                    <input\r\n                      data-testid=\"res-date\"\r\n                      className={( formik.errors.date) ? \"errorFormInput\" : \"formInput\" }\r\n                      type=\"date\"\r\n                      id=\"res-date\"\r\n                      {...formik.getFieldProps(\"date\")}\r\n                    />\r\n                    {formik.errors.date && <p className=\"ErrorDiv\">{formik.errors.date}</p>}\r\n                </div>\r\n                {/* Time */}\r\n                {/* <div className='BookingDivs'>\r\n                    <label htmlFor=\"res-time\">Choose time</label>\r\n                    <select\r\n                      data-testid=\"res-time\"\r\n                      className={(formik.touched.time && formik.errors.time) ? \"ErrorBookingInput\" : \"BookingInput\" }\r\n                      id=\"res-time\"\r\n                      {...formik.getFieldProps(\"time\")}\r\n                    >\r\n                    {!formik.values.time && <option value=\"\" disabled hidden></option>}\r\n                    {availableTimeslots.length > 0 ? (\r\n                    availableTimeslots.map((time) => (\r\n                        <option key={time} value={time}>{time}</option>\r\n                    ))\r\n                    ) : (\r\n                        <option value=\"\" disabled>No available timeslots</option>\r\n                    )}\r\n                    </select>\r\n                    {formik.touched.time && formik.errors.time && <p className=\"ErrorDiv\">{formik.errors.time}</p>}\r\n                </div> */}\r\n                {/* Submit Button */}\r\n                {bookingIsPending ?\r\n                  <input aria-label=\"On Click\" disabled className='CustomButton' type=\"submit\" value=\"loading\"/>\r\n                  :\r\n                  <input aria-label=\"On Click\" disabled={formik.errors.date || formik.errors.time || formik.errors.guests || formik.errors.occasion} className='CustomButton' type=\"submit\" value=\"Continue\"/>\r\n                }\r\n                { bookingError && <p className=\"errorDiv\">Something went wrong! Booking is not submitted.</p>}\r\n              </form>            \r\n        </Row>\r\n\r\n    </>\r\n     ) }\r\n</>\r\n  )\r\n}\r\n\r\nexport default ChooseDateTimeScreen"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,MAAM,EAAEC,IAAI,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AAC9D,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C;AACA,OAAOC,aAAa,MAAM,uCAAuC;AACjE,OAAOC,YAAY,MAAM,uCAAuC;AAChE,OAAOC,MAAM,MAAM,gCAAgC;AACnD,OAAOC,OAAO,MAAM,iCAAiC;AACrD;AACA,SAASC,kBAAkB,QAAQ,4BAA4B;AAC/D;AACA,SAASC,UAAU,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvD,SAASC,oBAAoBA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,WAAA;EAC5B;EACA,MAAM;IAAEC,IAAI,EAAEC,OAAO;IAAEC,SAAS;IAAEC;EAAK,CAAC,GAAGZ,kBAAkB,CAAC,CAAC;EAE/D,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;;EAE1D;EACA,MAAM4B,QAAQ,GAAGpB,WAAW,CAAC,CAAC;EAC9B,MAAMqB,QAAQ,GAAGvB,WAAW,CAAC,CAAC;EAE9B,MAAMwB,aAAa,GAAIC,CAAC,IAAK;IACzBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,MAAM,GAAGV,OAAO,CAACW,IAAI,CAACD,MAAM,IAAIA,MAAM,CAACE,EAAE,KAAKT,cAAc,CAAC;IACnEU,OAAO,CAACC,GAAG,CAACJ,MAAM,CAAC;IACnB;IACAJ,QAAQ,CAACf,UAAU,CAAC;MAACmB;IAAM,CAAC,CAAC,CAAC;IAC9BL,QAAQ,CAAC,mBAAmB,CAAC;EACjC,CAAC;EAEC,MAAMU,kBAAkB,GAAIC,QAAQ,IAAK;IACvCZ,iBAAiB,CAACY,QAAQ,CAAC;EAC7B,CAAC;EAEL,oBACFvB,OAAA,CAAAE,SAAA;IAAAsB,QAAA,EACEhB,SAAS,gBACLR,OAAA,CAACL,MAAM;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,GACPnB,KAAK,gBACPT,OAAA,CAACJ,OAAO;MAACiC,OAAO,EAAC,QAAQ;MAAAL,QAAA,EAAG,CAAAf,KAAK,aAALA,KAAK,wBAAAJ,WAAA,GAALI,KAAK,CAAEH,IAAI,cAAAD,WAAA,uBAAXA,WAAA,CAAayB,OAAO,KAAIrB,KAAK,CAACA;IAAK;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC,gBAE7E5B,OAAA,CAAAE,SAAA;MAAAsB,QAAA,gBACIxB,OAAA,CAACZ,GAAG;QAAAoC,QAAA,eACAxB,OAAA;UAAI+B,SAAS,EAAC,uBAAuB;UAAAP,QAAA,EAAC;QAAkB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CAAC,eACN5B,OAAA,CAACZ,GAAG;QAAAoC,QAAA,eACAxB,OAAA,CAACN,YAAY;UAACsC,KAAK;UAACC,KAAK;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,eACN5B,OAAA,CAACZ,GAAG;QAAAoC,QAAA,eAiBAxB,OAAA;UAAMkC,QAAQ,EAAEC,MAAM,CAACC,YAAa;UAACC,UAAU;UAAAb,QAAA,gBAE3CxB,OAAA;YAAK+B,SAAS,EAAC,UAAU;YAAAP,QAAA,gBACrBxB,OAAA;cAAOsC,OAAO,EAAC,UAAU;cAAAd,QAAA,EAAC;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC7C5B,OAAA;cACE,eAAY,UAAU;cACtB+B,SAAS,EAAII,MAAM,CAACI,MAAM,CAACC,IAAI,GAAI,gBAAgB,GAAG,WAAa;cACnEC,IAAI,EAAC,MAAM;cACXtB,EAAE,EAAC,UAAU;cAAA,GACTgB,MAAM,CAACO,aAAa,CAAC,MAAM;YAAC;cAAAjB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjC,CAAC,EACDO,MAAM,CAACI,MAAM,CAACC,IAAI,iBAAIxC,OAAA;cAAG+B,SAAS,EAAC,UAAU;cAAAP,QAAA,EAAEW,MAAM,CAACI,MAAM,CAACC;YAAI;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtE,CAAC,EAsBLe,gBAAgB,gBACf3C,OAAA;YAAO,cAAW,UAAU;YAAC4C,QAAQ;YAACb,SAAS,EAAC,cAAc;YAACU,IAAI,EAAC,QAAQ;YAACI,KAAK,EAAC;UAAS;YAAApB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,gBAE9F5B,OAAA;YAAO,cAAW,UAAU;YAAC4C,QAAQ,EAAET,MAAM,CAACI,MAAM,CAACC,IAAI,IAAIL,MAAM,CAACI,MAAM,CAACO,IAAI,IAAIX,MAAM,CAACI,MAAM,CAACQ,MAAM,IAAIZ,MAAM,CAACI,MAAM,CAACS,QAAS;YAACjB,SAAS,EAAC,cAAc;YAACU,IAAI,EAAC,QAAQ;YAACI,KAAK,EAAC;UAAU;YAAApB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,EAE5LqB,YAAY,iBAAIjD,OAAA;YAAG+B,SAAS,EAAC,UAAU;YAAAP,QAAA,EAAC;UAA+C;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA,eAER;EACA,gBACJ,CAAC;AAEH;AAACxB,EAAA,CArGQD,oBAAoB;EAAA,QAEkBN,kBAAkB,EAK5CL,WAAW,EACXF,WAAW;AAAA;AAAA4D,EAAA,GARvB/C,oBAAoB;AAuG7B,eAAeA,oBAAoB;AAAA,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}