{"ast":null,"code":"// Communicate with the back-end Server\n\nimport { BOOKINGS_URL } from \"../constants\";\nimport { apiSlice } from './apiSlice';\n\n// Inject endpoint to main apiSlice\nexport const bookingsApiSlice = apiSlice.injectEndpoints({\n  endpoints: builder => ({\n    // Create booking\n    createOrder: builder.mutation({\n      query: order => ({\n        url: BOOKINGS_URL,\n        method: 'POST',\n        body: {\n          ...order\n        }\n      })\n    }),\n    // Get order by ID\n    // getOrderDetails: builder.query({\n    //     query: (orderId) => ({\n    //         url: `${ORDERS_URL}/${orderId}`\n    //     }),\n    //     keepUnusedDataFor: 5\n    // }),\n    // Pay order\n    // payOrder: builder.mutation({\n    //     query: ({orderId, details}) => ({\n    //         url: `${ORDERS_URL}/${orderId}/pay`,\n    //         method: 'PUT',\n    //         body: {...details},\n    //     })\n    // }),\n    // Get PayPal client\n    // getPayPalClientId: builder.query({\n    //     query: () => ({\n    //         url: PAYPAL_URL,\n    //     }),\n    //     keepUnusedDataFor: 5,\n    // }),\n    // Get logged in user's orders\n    // getMyOrders: builder.query({\n    //     query: ({pageNumber}) => ({ // Pagination functionality\n    //         url: `${ORDERS_URL}/myorders`,\n    //         params: {\n    //             pageNumber,\n    //         },\n    //     }),\n    //     keepUnusedDataFor: 5\n    // }),\n    // ----------------------------------------------------------\n    // (ADMIN) OWNER || BARBER\n    // ----------------------------------------------------------\n    // Get all bookings\n    getBookings: builder.query({\n      query: ({\n        pageNumber\n      }) => ({\n        // Pagination functionality\n        url: BOOKINGS_URL,\n        params: {\n          pageNumber\n        },\n        headers: {\n          Authorization: `Token ${userToken}`\n        }\n      }),\n      keepUnusedDataFor: 5\n    })\n    // Update order to be set as delivered\n    // deliverOrder: builder.mutation({\n    //     query: (orderId) => ({\n    //         url: `${ORDERS_URL}/${orderId}/deliver`,\n    //         method: 'PUT'\n    //     }),\n    // }),\n  })\n});\nexport const {\n  useCreateBookingMutation,\n  // useGetOrderDetailsQuery,\n  // usePayOrderMutation,\n  // useGetPayPalClientIdQuery,\n  // useGetMyOrdersQuery,\n  useGetBookingsQuery\n  // useDeliverOrderMutation\n} = bookingsApiSlice;","map":{"version":3,"names":["BOOKINGS_URL","apiSlice","bookingsApiSlice","injectEndpoints","endpoints","builder","createOrder","mutation","query","order","url","method","body","getBookings","pageNumber","params","headers","Authorization","userToken","keepUnusedDataFor","useCreateBookingMutation","useGetBookingsQuery"],"sources":["C:/Users/micha/Documents/Portofolio/barber-shop/frontend/src/slices/bookingsApiSlice.js"],"sourcesContent":["// Communicate with the back-end Server\r\n\r\nimport { BOOKINGS_URL } from \"../constants\";\r\nimport { apiSlice } from './apiSlice';\r\n\r\n// Inject endpoint to main apiSlice\r\nexport const bookingsApiSlice = apiSlice.injectEndpoints({\r\n    endpoints: (builder) => ({\r\n        // Create booking\r\n        createOrder: builder.mutation({\r\n            query: (order) => ({\r\n                url: BOOKINGS_URL,\r\n                method: 'POST',\r\n                body: {...order}\r\n            })\r\n        }),\r\n        // Get order by ID\r\n        // getOrderDetails: builder.query({\r\n        //     query: (orderId) => ({\r\n        //         url: `${ORDERS_URL}/${orderId}`\r\n        //     }),\r\n        //     keepUnusedDataFor: 5\r\n        // }),\r\n        // Pay order\r\n        // payOrder: builder.mutation({\r\n        //     query: ({orderId, details}) => ({\r\n        //         url: `${ORDERS_URL}/${orderId}/pay`,\r\n        //         method: 'PUT',\r\n        //         body: {...details},\r\n        //     })\r\n        // }),\r\n        // Get PayPal client\r\n        // getPayPalClientId: builder.query({\r\n        //     query: () => ({\r\n        //         url: PAYPAL_URL,\r\n        //     }),\r\n        //     keepUnusedDataFor: 5,\r\n        // }),\r\n        // Get logged in user's orders\r\n        // getMyOrders: builder.query({\r\n        //     query: ({pageNumber}) => ({ // Pagination functionality\r\n        //         url: `${ORDERS_URL}/myorders`,\r\n        //         params: {\r\n        //             pageNumber,\r\n        //         },\r\n        //     }),\r\n        //     keepUnusedDataFor: 5\r\n        // }),\r\n        // ----------------------------------------------------------\r\n        // (ADMIN) OWNER || BARBER\r\n        // ----------------------------------------------------------\r\n        // Get all bookings\r\n        getBookings: builder.query({\r\n            query: ({pageNumber}) => ({ // Pagination functionality\r\n                url: BOOKINGS_URL,\r\n                params: {\r\n                    pageNumber,\r\n                },\r\n                headers: {\r\n                    Authorization: `Token ${userToken}`,\r\n                },\r\n            }),\r\n            keepUnusedDataFor: 5\r\n        }),\r\n        // Update order to be set as delivered\r\n        // deliverOrder: builder.mutation({\r\n        //     query: (orderId) => ({\r\n        //         url: `${ORDERS_URL}/${orderId}/deliver`,\r\n        //         method: 'PUT'\r\n        //     }),\r\n        // }),\r\n    }),\r\n});\r\n\r\nexport const {\r\n    useCreateBookingMutation,\r\n    // useGetOrderDetailsQuery,\r\n    // usePayOrderMutation,\r\n    // useGetPayPalClientIdQuery,\r\n    // useGetMyOrdersQuery,\r\n    useGetBookingsQuery,\r\n    // useDeliverOrderMutation\r\n } = bookingsApiSlice;\r\n"],"mappings":"AAAA;;AAEA,SAASA,YAAY,QAAQ,cAAc;AAC3C,SAASC,QAAQ,QAAQ,YAAY;;AAErC;AACA,OAAO,MAAMC,gBAAgB,GAAGD,QAAQ,CAACE,eAAe,CAAC;EACrDC,SAAS,EAAGC,OAAO,KAAM;IACrB;IACAC,WAAW,EAAED,OAAO,CAACE,QAAQ,CAAC;MAC1BC,KAAK,EAAGC,KAAK,KAAM;QACfC,GAAG,EAAEV,YAAY;QACjBW,MAAM,EAAE,MAAM;QACdC,IAAI,EAAE;UAAC,GAAGH;QAAK;MACnB,CAAC;IACL,CAAC,CAAC;IACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAI,WAAW,EAAER,OAAO,CAACG,KAAK,CAAC;MACvBA,KAAK,EAAEA,CAAC;QAACM;MAAU,CAAC,MAAM;QAAE;QACxBJ,GAAG,EAAEV,YAAY;QACjBe,MAAM,EAAE;UACJD;QACJ,CAAC;QACDE,OAAO,EAAE;UACLC,aAAa,EAAG,SAAQC,SAAU;QACtC;MACJ,CAAC,CAAC;MACFC,iBAAiB,EAAE;IACvB,CAAC;IACD;IACA;IACA;IACA;IACA;IACA;IACA;EACJ,CAAC;AACL,CAAC,CAAC;AAEF,OAAO,MAAM;EACTC,wBAAwB;EACxB;EACA;EACA;EACA;EACAC;EACA;AACH,CAAC,GAAGnB,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}