{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micha\\\\Documents\\\\Portofolio\\\\barber-shop\\\\frontend\\\\src\\\\screens\\\\book\\\\ChooseBarberScreen.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Form, Button, Card } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n// Components\nimport FormContainer from '../../components/common/FormContainer';\nimport BookingSteps from '../../components/booking/BookingSteps';\n// Slices\n// import { saveShippingAddress } from '../../slices/cartSlice';\nimport { saveBarber } from '../../slices/bookingSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChooseBarberScreen() {\n  _s();\n  // Get the barber global state\n  const booking = useSelector(state => state.booking);\n  const {\n    barber\n  } = booking;\n\n  // Populate the component local state based on the results of the global state if any\n  // const [address, setAddress] = useState(shippingAddress?.address || '');\n  // const [city, setCity] = useState(shippingAddress?.city || '');\n  // const [postalCode, setPostalCode] = useState(shippingAddress?.postalCode || '');\n  // const [country, setCountry] = useState(shippingAddress?.country || '');\n\n  const [barberName, setBarberName] = useState((barber === null || barber === void 0 ? void 0 : barber.username) || '');\n  const [selectedBarber, setSelectedBarber] = useState(null);\n\n  // const isFormFilled = address && city && postalCode && country;\n\n  // Initialization\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const submitHandler = e => {\n    e.preventDefault();\n    // Update the global state\n    dispatch(saveBarber({\n      barberName\n    }));\n    navigate('/booking-datetime');\n  };\n  const barbers = [{\n    id: 1,\n    name: 'Barber 1'\n  }, {\n    id: 2,\n    name: 'Barber 2'\n  }, {\n    id: 3,\n    name: 'Barber 3'\n  }];\n  const handleBarberSelect = barberId => {\n    setSelectedBarber(barberId);\n  };\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(BookingSteps, {\n      step1: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Select Barber\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: barbers.map(barber => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4 mb-4\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            onClick: () => handleBarberSelect(barber.id),\n            className: selectedBarber === barber.id ? 'selected-card my-3 p-3 rounded' : 'my-3 p-3 rounded',\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: barber.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                type: \"radio\",\n                id: `barber-${barber.id}`,\n                label: \"Select\",\n                checked: selectedBarber === barber.id,\n                onChange: () => handleBarberSelect(barber.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this)\n        }, barber.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        className: \"my-2\"\n        // disabled={!isFormFilled}\n        ,\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(ChooseBarberScreen, \"o1vXXHa265knvzV0xD33izBj2ew=\", false, function () {\n  return [useSelector, useNavigate, useDispatch];\n});\n_c = ChooseBarberScreen;\nexport default ChooseBarberScreen;\nvar _c;\n$RefreshReg$(_c, \"ChooseBarberScreen\");","map":{"version":3,"names":["React","useState","Form","Button","Card","useDispatch","useSelector","useNavigate","FormContainer","BookingSteps","saveBarber","jsxDEV","_jsxDEV","ChooseBarberScreen","_s","booking","state","barber","barberName","setBarberName","username","selectedBarber","setSelectedBarber","navigate","dispatch","submitHandler","e","preventDefault","barbers","id","name","handleBarberSelect","barberId","children","step1","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","map","onClick","Body","Title","Check","type","label","checked","onChange","variant","_c","$RefreshReg$"],"sources":["C:/Users/micha/Documents/Portofolio/barber-shop/frontend/src/screens/book/ChooseBarberScreen.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Form, Button, Card } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\n// Components\r\nimport FormContainer from '../../components/common/FormContainer';\r\nimport BookingSteps from '../../components/booking/BookingSteps';\r\n// Slices\r\n// import { saveShippingAddress } from '../../slices/cartSlice';\r\nimport { saveBarber } from '../../slices/bookingSlice';\r\n\r\nfunction ChooseBarberScreen() {\r\n    // Get the barber global state\r\n    const booking = useSelector((state) => state.booking);\r\n    const { barber } = booking;\r\n\r\n    // Populate the component local state based on the results of the global state if any\r\n    // const [address, setAddress] = useState(shippingAddress?.address || '');\r\n    // const [city, setCity] = useState(shippingAddress?.city || '');\r\n    // const [postalCode, setPostalCode] = useState(shippingAddress?.postalCode || '');\r\n    // const [country, setCountry] = useState(shippingAddress?.country || '');\r\n\r\n    const [barberName, setBarberName] = useState(barber?.username || '')\r\n    const [selectedBarber, setSelectedBarber] = useState(null);\r\n\r\n    // const isFormFilled = address && city && postalCode && country;\r\n\r\n    // Initialization\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        // Update the global state\r\n        dispatch(saveBarber({barberName}));\r\n        navigate('/booking-datetime');\r\n    }\r\n\r\n    const barbers = [\r\n        { id: 1, name: 'Barber 1' },\r\n        { id: 2, name: 'Barber 2' },\r\n        { id: 3, name: 'Barber 3' },\r\n      ];\r\n    \r\n      const handleBarberSelect = (barberId) => {\r\n        setSelectedBarber(barberId);\r\n      };\r\n\r\n  return (\r\n    <FormContainer>\r\n        <BookingSteps step1 />\r\n        <h1>Select Barber</h1>\r\n        <Form onSubmit={submitHandler}>\r\n            {/* Barber */}\r\n            <div className=\"row\">\r\n                {barbers.map((barber) => (\r\n                <div key={barber.id} className=\"col-md-4 mb-4\">\r\n                    <Card\r\n                    onClick={() => handleBarberSelect(barber.id)}\r\n                    className={selectedBarber === barber.id ? 'selected-card my-3 p-3 rounded' : 'my-3 p-3 rounded'}\r\n                    >\r\n                    <Card.Body>\r\n                        <Card.Title>{barber.name}</Card.Title>\r\n                        <Form.Check\r\n                        type=\"radio\"\r\n                        id={`barber-${barber.id}`}\r\n                        label=\"Select\"\r\n                        checked={selectedBarber === barber.id}\r\n                        onChange={() => handleBarberSelect(barber.id)}\r\n                        />\r\n                    </Card.Body>\r\n                    </Card>\r\n                </div>\r\n                ))}\r\n            </div>\r\n\r\n\r\n\r\n            {/* Country */}\r\n            {/* <Form.Group controlId='country' className='my-2'>\r\n                <Form.Label>Country:</Form.Label>\r\n                <Form.Control\r\n                    type='text'\r\n                    placeholder='Insert country'\r\n                    value={country}\r\n                    onChange={(e) => setCountry(e.target.value)}\r\n                >\r\n                </Form.Control>\r\n            </Form.Group> */}\r\n            {/* Submit Button */}\r\n            <Button\r\n                type='submit'\r\n                variant='primary'\r\n                className='my-2'\r\n                // disabled={!isFormFilled}\r\n            >\r\n                Continue\r\n            </Button>\r\n        </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default ChooseBarberScreen"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}