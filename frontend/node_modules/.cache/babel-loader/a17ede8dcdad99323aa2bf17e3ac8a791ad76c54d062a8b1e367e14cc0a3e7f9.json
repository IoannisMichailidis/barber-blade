{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micha\\\\Documents\\\\Portofolio\\\\barber-shop\\\\frontend\\\\src\\\\screens\\\\haircut\\\\HaircutsScreen.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Row, Col, Image } from 'react-bootstrap';\nimport { useParams, Link } from 'react-router-dom';\n// Components\nimport Product from '../../components/productscreen/Product';\nimport Loader from '../../components/common/Loader';\nimport Message from '../../components/common/Message';\nimport Paginate from '../../components/productscreen/Paginate';\n// Slices\nimport { useGetHaircutsQuery } from '../../slices/haircutsApiSlice';\n// Images\nimport allHatsScreenImage from '../../assets/allHatsScreenImage.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HaircutsScreen = () => {\n  _s();\n  const {\n    pageNumber\n  } = useParams();\n\n  // Query the haircuts using the useGetHaircutsQuery instead of using axios or fetch\n  // const { data, isLoading, error} = useGetHaircutsQuery({pageNumber});\n  // console.log(data);\n  // const data = {\n  //     products: [\n  //       {\n  //         _id: '1',\n  //         user: 'Mitsos',\n  //         name: 'Fedora Style 1',\n  //         image: '/images/FedoraStyle1.jpg',\n  //         brand: 'Stetson',\n  //         category: 'fedora',\n  //         description: 'The epitome of elegance and craftsmanship',\n  //         rating: 0,\n  //         numReviews: 0,\n  //         price: 39.99,\n  //         countInStock: 10\n  //       },\n  //       {\n  //         _id: '2',\n  //         user: 'Kotsos',\n  //         name: 'Fedora Style 1',\n  //         image: '/images/FedoraStyle1.jpg',\n  //         brand: 'Stetson',\n  //         category: 'fedora',\n  //         description: 'The epitome of elegance and craftsmanship',\n  //         rating: 0,\n  //         numReviews: 0,\n  //         price: 39.99,\n  //         countInStock: 10\n  //       }\n  //     ]\n  //   };\n  const isLoading = false;\n  const error = false;\n  const [haircuts, setHaircuts] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:8000/api/haircuts').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      setHaircuts(data);\n    }).catch(error => {\n      console.error('There has been a problem with your fetch operation:', error);\n    });\n  }, []); // The empty array means this effect runs once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Haircuts\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(HaircutsScreen, \"aRLAYrrlkDgU9Lp9iVK+AG7MjQ0=\", false, function () {\n  return [useParams];\n});\n_c = HaircutsScreen;\nexport default HaircutsScreen;\nvar _c;\n$RefreshReg$(_c, \"HaircutsScreen\");","map":{"version":3,"names":["React","useEffect","useState","Row","Col","Image","useParams","Link","Product","Loader","Message","Paginate","useGetHaircutsQuery","allHatsScreenImage","jsxDEV","_jsxDEV","HaircutsScreen","_s","pageNumber","isLoading","error","haircuts","setHaircuts","fetch","then","response","ok","Error","json","data","catch","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/micha/Documents/Portofolio/barber-shop/frontend/src/screens/haircut/HaircutsScreen.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport { Row, Col, Image } from 'react-bootstrap';\r\nimport { useParams, Link } from 'react-router-dom';\r\n// Components\r\nimport Product from '../../components/productscreen/Product';\r\nimport Loader from '../../components/common/Loader';\r\nimport Message from '../../components/common/Message';\r\nimport Paginate from '../../components/productscreen/Paginate';\r\n// Slices\r\nimport { useGetHaircutsQuery } from '../../slices/haircutsApiSlice';\r\n// Images\r\nimport allHatsScreenImage from '../../assets/allHatsScreenImage.jpg';\r\n\r\n\r\nconst HaircutsScreen = () => {\r\n  const { pageNumber } = useParams();\r\n\r\n  // Query the haircuts using the useGetHaircutsQuery instead of using axios or fetch\r\n  // const { data, isLoading, error} = useGetHaircutsQuery({pageNumber});\r\n  // console.log(data);\r\n// const data = {\r\n//     products: [\r\n//       {\r\n//         _id: '1',\r\n//         user: 'Mitsos',\r\n//         name: 'Fedora Style 1',\r\n//         image: '/images/FedoraStyle1.jpg',\r\n//         brand: 'Stetson',\r\n//         category: 'fedora',\r\n//         description: 'The epitome of elegance and craftsmanship',\r\n//         rating: 0,\r\n//         numReviews: 0,\r\n//         price: 39.99,\r\n//         countInStock: 10\r\n//       },\r\n//       {\r\n//         _id: '2',\r\n//         user: 'Kotsos',\r\n//         name: 'Fedora Style 1',\r\n//         image: '/images/FedoraStyle1.jpg',\r\n//         brand: 'Stetson',\r\n//         category: 'fedora',\r\n//         description: 'The epitome of elegance and craftsmanship',\r\n//         rating: 0,\r\n//         numReviews: 0,\r\n//         price: 39.99,\r\n//         countInStock: 10\r\n//       }\r\n//     ]\r\n//   };\r\n  const isLoading = false;\r\n  const error = false;\r\n  const [haircuts, setHaircuts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:8000/api/haircuts')\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        setHaircuts(data);\r\n      })\r\n      .catch(error => {\r\n        console.error('There has been a problem with your fetch operation:', error);\r\n      });\r\n  }, []); // The empty array means this effect runs once on mount\r\n\r\n  return (\r\n    <h1>Haircuts</h1>\r\n  )\r\n}\r\n\r\nexport default HaircutsScreen;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,SAASC,GAAG,EAAEC,GAAG,EAAEC,KAAK,QAAQ,iBAAiB;AACjD,SAASC,SAAS,EAAEC,IAAI,QAAQ,kBAAkB;AAClD;AACA,OAAOC,OAAO,MAAM,wCAAwC;AAC5D,OAAOC,MAAM,MAAM,gCAAgC;AACnD,OAAOC,OAAO,MAAM,iCAAiC;AACrD,OAAOC,QAAQ,MAAM,yCAAyC;AAC9D;AACA,SAASC,mBAAmB,QAAQ,+BAA+B;AACnE;AACA,OAAOC,kBAAkB,MAAM,qCAAqC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGrE,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC;EAAW,CAAC,GAAGZ,SAAS,CAAC,CAAC;;EAElC;EACA;EACA;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACE,MAAMa,SAAS,GAAG,KAAK;EACvB,MAAMC,KAAK,GAAG,KAAK;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACdsB,KAAK,CAAC,oCAAoC,CAAC,CACxCC,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;MACZP,WAAW,CAACO,IAAI,CAAC;IACnB,CAAC,CAAC,CACDC,KAAK,CAACV,KAAK,IAAI;MACdW,OAAO,CAACX,KAAK,CAAC,qDAAqD,EAAEA,KAAK,CAAC;IAC7E,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEL,OAAA;IAAAiB,QAAA,EAAI;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAErB,CAAC;AAAAnB,EAAA,CA3DKD,cAAc;EAAA,QACKV,SAAS;AAAA;AAAA+B,EAAA,GAD5BrB,cAAc;AA6DpB,eAAeA,cAAc;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}