{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micha\\\\Documents\\\\Portofolio\\\\barber-shop\\\\frontend\\\\src\\\\screens\\\\auth\\\\LoginScreen.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport { useDispatch, useSelector } from 'react-redux';\n// Components\nimport FormContainer from '../../components/common/FormContainer';\nimport Loader from '../../components/common/Loader';\n// Slices\nimport { useLoginMutation } from '../../slices/usersApiSlice';\nimport { setCredentials } from '../../slices/authSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginScreen = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [loginApiCall, {\n    isLoading\n  }] = useLoginMutation();\n\n  // Get user info from the global state\n  const {\n    userInfo\n  } = useSelector(state => state.auth);\n\n  // Search params to implement redirection functionality\n  const {\n    search\n  } = useLocation();\n  const searchParams = new URLSearchParams(search);\n  const redirect = searchParams.get('redirect') || '/'; // checks if there is the redirect in the params. If not then /\n\n  // Redirected if logged in\n  useEffect(() => {\n    if (userInfo) {\n      navigate(redirect);\n    }\n  }, [userInfo, redirect, navigate]);\n  const submitHandler = async e => {\n    e.preventDefault();\n    // Login user\n    try {\n      // Login user using login from userLoginMutation (post request to back-end)\n      const res = await loginApiCall({\n        email,\n        password\n      }).unwrap(); // unwrap the resolved value from the promise\n      // Update the user state using the setCredentials\n      dispatch(setCredentials({\n        ...res\n      }));\n      // Redirect the user\n      navigate(redirect);\n    } catch (err) {\n      var _err$data;\n      toast.error((err === null || err === void 0 ? void 0 : (_err$data = err.data) === null || _err$data === void 0 ? void 0 : _err$data.message) || err.error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"email\",\n        className: \"my-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Insert email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"password\",\n        className: \"my-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Insert password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        className: \"mt-2\",\n        disabled: isLoading,\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginScreen, \"hHPoN8irp3tkysrBJbmnJTSMxKw=\", false, function () {\n  return [useDispatch, useNavigate, useLoginMutation, useSelector, useLocation];\n});\n_c = LoginScreen;\nexport default LoginScreen;\nvar _c;\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"names":["React","useState","useEffect","Link","useLocation","useNavigate","Form","Button","Row","Col","toast","useDispatch","useSelector","FormContainer","Loader","useLoginMutation","setCredentials","jsxDEV","_jsxDEV","LoginScreen","_s","email","setEmail","password","setPassword","dispatch","navigate","loginApiCall","isLoading","userInfo","state","auth","search","searchParams","URLSearchParams","redirect","get","submitHandler","e","preventDefault","res","unwrap","err","_err$data","error","data","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Group","controlId","className","Label","Control","type","placeholder","value","onChange","target","variant","disabled","_c","$RefreshReg$"],"sources":["C:/Users/micha/Documents/Portofolio/barber-shop/frontend/src/screens/auth/LoginScreen.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// Components\r\nimport FormContainer from '../../components/common/FormContainer';\r\nimport Loader from '../../components/common/Loader';\r\n// Slices\r\nimport { useLoginMutation } from '../../slices/usersApiSlice';\r\nimport { setCredentials } from '../../slices/authSlice';\r\n\r\nconst LoginScreen = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const [loginApiCall, { isLoading }] = useLoginMutation();\r\n\r\n    // Get user info from the global state\r\n    const { userInfo } = useSelector((state) => state.auth);\r\n\r\n    // Search params to implement redirection functionality\r\n    const { search } = useLocation();\r\n    const searchParams = new URLSearchParams(search);\r\n    const redirect = searchParams.get('redirect') || '/'; // checks if there is the redirect in the params. If not then /\r\n\r\n    // Redirected if logged in\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            navigate(redirect);\r\n        }\r\n    },[userInfo, redirect, navigate])\r\n\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault();\r\n        // Login user\r\n        try {\r\n            // Login user using login from userLoginMutation (post request to back-end)\r\n            const res = await loginApiCall({email, password}).unwrap(); // unwrap the resolved value from the promise\r\n            // Update the user state using the setCredentials\r\n            dispatch(setCredentials({...res}));\r\n            // Redirect the user\r\n            navigate(redirect);\r\n        } catch (err) {\r\n            toast.error(err?.data?.message || err.error);\r\n        }\r\n    };\r\n\r\n\r\n  return (\r\n    <FormContainer>\r\n        <h1>Sign In</h1>\r\n        <Form onSubmit={submitHandler}>\r\n            {/* Email */}\r\n            <Form.Group controlId='email' className='my-3'>\r\n                <Form.Label>Email:</Form.Label>\r\n                <Form.Control\r\n                    type='email'\r\n                    placeholder='Insert email'\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                ></Form.Control>\r\n            </Form.Group>\r\n            {/* Password */}\r\n            <Form.Group controlId='password' className='my-3'>\r\n                <Form.Label>Password:</Form.Label>\r\n                <Form.Control\r\n                    type='password'\r\n                    placeholder='Insert password'\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                ></Form.Control>\r\n            </Form.Group>\r\n            {/* Submit Button */}\r\n            <Button type='submit' variant='primary' className='mt-2' disabled={isLoading}>\r\n                Sign In\r\n            </Button>\r\n            { isLoading && <Loader />}\r\n        </Form>\r\n\r\n        {/* <Row className='py-3'>\r\n            <Col>\r\n                Don't you have an account? <Link to={ redirect ? `/register?redirect=${redirect}` : '/register'}>Register</Link>\r\n            </Col>\r\n        </Row> */}\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default LoginScreen"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}