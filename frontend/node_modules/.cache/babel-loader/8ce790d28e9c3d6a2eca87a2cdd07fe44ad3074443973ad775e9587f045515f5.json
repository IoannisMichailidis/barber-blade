{"ast":null,"code":"// Communicate with the back-end Server\n\nimport { TIMESLOTS_URL } from \"../constants\";\nimport { apiSlice } from './apiSlice';\n\n// Inject endpoint to main apiSlice\nexport const timeslotsApiSlice = apiSlice.injectEndpoints({\n  endpoints: builder => ({\n    // ----------------------------------------------------------\n    // PUBLIC\n    // ----------------------------------------------------------\n    // Get all timeslots\n    getTimeslots: builder.query({\n      query: ({\n        pageNumber\n      }) => ({\n        // Pagination functionality\n        url: TIMESLOTS_URL,\n        params: {\n          pageNumber\n        }\n      }),\n      keepUnusedDataFor: 5\n    }),\n    // Update timeslot to be set as booked\n    updateTimeslot: builder.mutation({\n      query: orderId => ({\n        url: `${TIMESLOTS_URL}/${orderId}`,\n        method: 'PUT'\n      })\n    })\n  })\n});\nexport const {\n  useGetTimeslotsQuery,\n  useUpdateTimeslotMutation\n} = timeslotsApiSlice;","map":{"version":3,"names":["TIMESLOTS_URL","apiSlice","timeslotsApiSlice","injectEndpoints","endpoints","builder","getTimeslots","query","pageNumber","url","params","keepUnusedDataFor","updateTimeslot","mutation","orderId","method","useGetTimeslotsQuery","useUpdateTimeslotMutation"],"sources":["C:/Users/micha/Documents/Portofolio/barber-shop/frontend/src/slices/timeslotsApiSlice.js"],"sourcesContent":["// Communicate with the back-end Server\r\n\r\nimport { TIMESLOTS_URL } from \"../constants\";\r\nimport { apiSlice } from './apiSlice';\r\n\r\n// Inject endpoint to main apiSlice\r\nexport const timeslotsApiSlice = apiSlice.injectEndpoints({\r\n    endpoints: (builder) => ({\r\n        // ----------------------------------------------------------\r\n        // PUBLIC\r\n        // ----------------------------------------------------------\r\n        // Get all timeslots\r\n        getTimeslots: builder.query({\r\n            query: ({pageNumber}) => ({ // Pagination functionality\r\n                url: TIMESLOTS_URL,\r\n                params: {\r\n                    pageNumber,\r\n                },\r\n            }),\r\n            keepUnusedDataFor: 5\r\n        }),\r\n        // Update timeslot to be set as booked\r\n        updateTimeslot: builder.mutation({\r\n            query: (orderId) => ({\r\n                url: `${TIMESLOTS_URL}/${orderId}`,\r\n                method: 'PUT'\r\n            }),\r\n        }),\r\n    }),\r\n});\r\n\r\nexport const {\r\n    useGetTimeslotsQuery,\r\n    useUpdateTimeslotMutation\r\n } = timeslotsApiSlice;\r\n"],"mappings":"AAAA;;AAEA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,QAAQ,QAAQ,YAAY;;AAErC;AACA,OAAO,MAAMC,iBAAiB,GAAGD,QAAQ,CAACE,eAAe,CAAC;EACtDC,SAAS,EAAGC,OAAO,KAAM;IACrB;IACA;IACA;IACA;IACAC,YAAY,EAAED,OAAO,CAACE,KAAK,CAAC;MACxBA,KAAK,EAAEA,CAAC;QAACC;MAAU,CAAC,MAAM;QAAE;QACxBC,GAAG,EAAET,aAAa;QAClBU,MAAM,EAAE;UACJF;QACJ;MACJ,CAAC,CAAC;MACFG,iBAAiB,EAAE;IACvB,CAAC,CAAC;IACF;IACAC,cAAc,EAAEP,OAAO,CAACQ,QAAQ,CAAC;MAC7BN,KAAK,EAAGO,OAAO,KAAM;QACjBL,GAAG,EAAG,GAAET,aAAc,IAAGc,OAAQ,EAAC;QAClCC,MAAM,EAAE;MACZ,CAAC;IACL,CAAC;EACL,CAAC;AACL,CAAC,CAAC;AAEF,OAAO,MAAM;EACTC,oBAAoB;EACpBC;AACH,CAAC,GAAGf,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}