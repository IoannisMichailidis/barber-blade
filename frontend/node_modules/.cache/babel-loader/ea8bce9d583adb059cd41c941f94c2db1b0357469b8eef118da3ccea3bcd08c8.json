{"ast":null,"code":"// Manipulate global frond-end state\n\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  userInfo: localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null,\n  // get userInfo from the local storage\n  token: localStorage.getItem('token') || null\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    setCredentials: (state, action) => {\n      state.userInfo = action.payload;\n      localStorage.setItem('userInfo', JSON.stringify(action.payload)); // store the userInfo into local storage\n    },\n    logout: (state, action) => {\n      state.userInfo = null;\n      localStorage.clear();\n    },\n    setToken: (state, action) => {\n      state.token = action.payload;\n      localStorage.setItem('token', action.payload);\n    },\n    removeToken: state => {\n      state.token = null;\n      localStorage.removeItem('token');\n    }\n  }\n});\nexport const {\n  setCredentials,\n  logout,\n  setToken,\n  removeToken\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","userInfo","localStorage","getItem","JSON","parse","token","authSlice","name","reducers","setCredentials","state","action","payload","setItem","stringify","logout","clear","setToken","removeToken","removeItem","actions","reducer"],"sources":["C:/Users/micha/Documents/Portofolio/barber-shop/frontend/src/slices/authSlice.js"],"sourcesContent":["// Manipulate global frond-end state\r\n\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n    userInfo: localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null, // get userInfo from the local storage\r\n    token: localStorage.getItem('token') || null,\r\n}\r\n\r\nconst authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState,\r\n    reducers: {\r\n        setCredentials: (state, action) => {\r\n            state.userInfo = action.payload;\r\n            localStorage.setItem('userInfo', JSON.stringify(action.payload)); // store the userInfo into local storage\r\n        },\r\n        logout: (state, action) => {\r\n            state.userInfo = null;\r\n            localStorage.clear();\r\n        },\r\n        setToken: (state, action) => {\r\n            state.token = action.payload;\r\n            localStorage.setItem('token', action.payload);\r\n        },\r\n        removeToken: (state) => {\r\n            state.token = null;\r\n            localStorage.removeItem('token');\r\n        },\r\n    }\r\n})\r\n\r\nexport const { setCredentials, logout, setToken, removeToken } = authSlice.actions;\r\n\r\nexport default authSlice.reducer;"],"mappings":"AAAA;;AAEA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACjBC,QAAQ,EAAEC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,GAAG,IAAI;EAAE;EAClGG,KAAK,EAAEJ,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI;AAC5C,CAAC;AAED,MAAMI,SAAS,GAAGR,WAAW,CAAC;EAC1BS,IAAI,EAAE,MAAM;EACZR,YAAY;EACZS,QAAQ,EAAE;IACNC,cAAc,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACV,QAAQ,GAAGW,MAAM,CAACC,OAAO;MAC/BX,YAAY,CAACY,OAAO,CAAC,UAAU,EAAEV,IAAI,CAACW,SAAS,CAACH,MAAM,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;IACtE,CAAC;IACDG,MAAM,EAAEA,CAACL,KAAK,EAAEC,MAAM,KAAK;MACvBD,KAAK,CAACV,QAAQ,GAAG,IAAI;MACrBC,YAAY,CAACe,KAAK,CAAC,CAAC;IACxB,CAAC;IACDC,QAAQ,EAAEA,CAACP,KAAK,EAAEC,MAAM,KAAK;MACzBD,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO;MAC5BX,YAAY,CAACY,OAAO,CAAC,OAAO,EAAEF,MAAM,CAACC,OAAO,CAAC;IACjD,CAAC;IACDM,WAAW,EAAGR,KAAK,IAAK;MACpBA,KAAK,CAACL,KAAK,GAAG,IAAI;MAClBJ,YAAY,CAACkB,UAAU,CAAC,OAAO,CAAC;IACpC;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEV,cAAc;EAAEM,MAAM;EAAEE,QAAQ;EAAEC;AAAY,CAAC,GAAGZ,SAAS,CAACc,OAAO;AAElF,eAAed,SAAS,CAACe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}